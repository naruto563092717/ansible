---
- name: Install Docker on Ubuntu
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create directory for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker's repository to Apt sources
      ansible.builtin.shell:
        cmd: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" | tee /etc/apt/sources.list.d/docker.list
        executable: /bin/bash

    - name: Update apt cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Verify Docker installation
      ansible.builtin.command:
        cmd: docker --version
      register: docker_version

    - name: Display Docker version
      ansible.builtin.debug:
        msg: "Docker installed: {{ docker_version.stdout }}"

    - name: Add current user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Apply new group membership
      ansible.builtin.command:
        cmd: newgrp docker
        register: newgrp_result
        ignore_errors: yes  # Skipped if user interaction is required

    - name: Test Docker by running hello-world
      ansible.builtin.command:
        cmd: docker run hello-world
      register: hello_world_result
      failed_when: "'Hello from Docker!' not in hello_world_result.stdout"
      ignore_errors: yes

    - name: Enable Docker service
      ansible.builtin.systemd:
        name: docker.service
        enabled: true
        state: started

    - name: Enable containerd service
      ansible.builtin.systemd:
        name: containerd.service
        enabled: true
        state: started
