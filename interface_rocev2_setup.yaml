---
- name: Configure RDMA and ECN
  hosts: localhost
  gather_facts: no
  become: yes
  tasks:
    - name: Check if mst tool is available
      command: which mst
      register: mst_check
      ignore_errors: yes
      changed_when: false

    - name: Get MST status
      shell: mst status -v
      register: mst_output
      failed_when: mst_output.rc != 0

    - name: Parse RDMA and NET devices
      set_fact:
        RDMAs: "{{ RDMAs | default([]) + [item.split()[3]] }}"
        NETs: "{{ NETs | default([]) + [item.split()[4] | regex_replace('^net-', '')] }}"
      with_items: "{{ mst_output.stdout_lines }}"
      when: "'DEVICE_TYPE' in item or (item.split()[3] and item.split()[4])"

    - name: Enable ECN globally
      sysctl:
        name: net.ipv4.tcp_ecn
        value: 1
        state: present

    - name: Configure ECN settings for NET devices
      block:
        - name: Enable ECN for class 3
          copy:
            content: "1"
            dest: "/sys/class/net/{{ item }}/ecn/roce_np/enable/3"
          loop: "{{ NETs }}"

        - name: Set CNP L2 egress priority to 7
          copy:
            content: "7"
            dest: "/sys/class/net/{{ item }}/ecn/roce_np/cnp_802p_prio"
          loop: "{{ NETs }}"

        - name: Map CNP to DSCP 48
          copy:
            content: "48"
            dest: "/sys/class/net/{{ item }}/ecn/roce_np/cnp_dscp"
          loop: "{{ NETs }}"

        - name: Map PFC to priority 3
          command: mlnx_qos -i {{ item }} --trust=dscp --pfc 0,0,0,1,0,0,0,0
          loop: "{{ NETs }}"
